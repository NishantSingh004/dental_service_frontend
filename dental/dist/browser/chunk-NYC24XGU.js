import{a as $}from"./chunk-UYILTDBF.js";import{a as G}from"./chunk-DPBKMJBH.js";import"./chunk-4UEG4YGH.js";import"./chunk-WIDYGH7A.js";import{a as Y}from"./chunk-GVQSUSEC.js";import{a as K}from"./chunk-SCUENCVS.js";import{c as T}from"./chunk-EM67NHJN.js";import{a as z}from"./chunk-JWFPSY3G.js";import{a as R,b as B,c as j,d as N,e as Q,f as V,h as H}from"./chunk-7RYVJ5ZG.js";import{A as d,I as E,J as F,Q as U,T as q,p as P}from"./chunk-FTBPRRUE.js";import{$ as A,$b as s,Ab as k,Jb as o,Jc as S,Kb as n,Mb as y,Pb as C,Pc as D,Rb as M,aa as p,ac as L,bb as l,bc as I,cb as x,e as J,fa as g,oa as f,ob as _,pa as v,pb as b,tb as w}from"./chunk-ZDRYPNXQ.js";var X=(()=>{class i{static \u0275fac=function(a){return new(a||i)};static \u0275mod=b({type:i});static \u0275inj=p({imports:[d,d]})}return i})();var W=(()=>{class i{static \u0275fac=function(a){return new(a||i)};static \u0275mod=b({type:i});static \u0275inj=p({imports:[P,d,E,F,X]})}return i})();var u=class i{httpClient=g(z);apiUrl=K.apiUrl;getPatientDetails(e){return this.httpClient.get(`${this.apiUrl}/appointments/patientDetails?patientId=${e}`)}static \u0275fac=function(t){return new(t||i)};static \u0275prov=A({token:i,factory:i.\u0275fac,providedIn:"root"})};var h=J(Y());function et(i,e){if(i&1){let t=y();o(0,"div",5)(1,"mat-card",6)(2,"mat-card-header",7)(3,"mat-card-title"),s(4),n(),o(5,"mat-card-subtitle"),s(6),n()(),o(7,"mat-card-content")(8,"div")(9,"strong"),s(10,"Phone:"),n(),s(11),n(),o(12,"div")(13,"strong"),s(14,"Specialty:"),n(),s(15),n()(),o(16,"mat-card-actions")(17,"button",8),C("click",function(){let c=f(t).$implicit,r=M();return v(r.assignDoctorToPatient(c))}),s(18," Assign "),n()()()()}if(i&2){let t=e.$implicit;l(4),L(t.name),l(2),L(t.email),l(5),I(" ",t.phone,""),l(4),I(" ",t.role,"")}}var Z=class i{constructor(e,t){this.router=e;this.doctorService=t;let c=this.router.getCurrentNavigation()?.extras.state?.patient;if(c)localStorage.setItem("patient",JSON.stringify(c)),this.patient=c;else{let r=localStorage.getItem("patient");r&&(this.patient=JSON.parse(r))}}AssignPatientService=g(u);patient;doctors=[];patientArray=[];ngOnInit(){this.doctorService.getDoctors().subscribe(e=>{this.doctors=e})}assignDoctorToPatient(e){if(!this.patient){h.default.fire({title:"Notification",text:"No patient data found!",icon:"info",iconColor:"rgb(3, 108, 95)",confirmButtonText:"Close",confirmButtonColor:"rgb(252, 151, 114)",scrollbarPadding:!1});return}let t=this.patient._id,a=e._id,c=`patients_doctor_${a}`,r=JSON.parse(localStorage.getItem(c)||"[]");if(r.some(m=>m._id===t)){h.default.fire({title:"Notification",text:"Patient is already assigned to this doctor!",icon:"info",iconColor:"rgb(3, 108, 95)",confirmButtonText:"Close",confirmButtonColor:"rgb(252, 151, 114)",scrollbarPadding:!1});return}this.AssignPatientService.getPatientDetails(t).subscribe({next:m=>{r.push(m),localStorage.setItem(c,JSON.stringify(r)),h.default.fire({title:"Notification",text:`Patient ${this.patient.name} has been assigned to Doctor ${e.name}!`,icon:"info",iconColor:"rgb(3, 108, 95)",confirmButtonText:"Close",confirmButtonColor:"rgb(252, 151, 114)",scrollbarPadding:!1}),localStorage.setItem("doctorName",e.name),localStorage.setItem("currentDoctorId",a),this.doctorService.assignDoctor({patientId:t,doctorId:a}).subscribe(()=>{this.router.navigate(["/admin"],{state:{doctorName:e.name}})})},error:m=>{console.error("Error fetching patient details:",m),h.default.fire({title:"Error",text:"Failed to assign patient!",icon:"error",confirmButtonText:"Close",confirmButtonColor:"rgb(252, 151, 114)",scrollbarPadding:!1})}})}getPatientsForDoctor(e){let t=`patients_doctor_${e}`;return JSON.parse(localStorage.getItem(t)||"[]")}static \u0275fac=function(t){return new(t||i)(x(T),x(G))};static \u0275cmp=_({type:i,selectors:[["app-assign-doctor"]],decls:6,vars:1,consts:[[1,"list"],[1,"heading"],[1,"admin-container"],[1,"card-container"],["class","card-wrapper",4,"ngFor","ngForOf"],[1,"card-wrapper"],[1,"doctor-card"],[1,"card-header"],["mat-raised-button","","color","accent",3,"click"]],template:function(t,a){t&1&&(o(0,"div",0)(1,"h2",1),s(2,"Assign Doctor"),n()(),o(3,"div",2)(4,"div",3),w(5,et,19,4,"div",4),n()()),t&2&&(l(5),k("ngForOf",a.doctors))},dependencies:[W,D,S,q,U,H,R,Q,j,V,N,B,$],styles:[".admin-container[_ngcontent-%COMP%]{width:100%;padding:20px;background:#f7efe8;overflow-y:scroll;scrollbar-width:none;height:800px}.list[_ngcontent-%COMP%]{width:100%;padding-top:2rem}.heading[_ngcontent-%COMP%]{font-size:2.5rem;font-weight:700;text-align:center;color:#036c5f;margin-bottom:20px}.card-container[_ngcontent-%COMP%]{display:flex;flex-wrap:wrap;gap:10px;justify-content:space-around;height:112vh;overflow-y:scroll;scrollbar-width:none;margin-top:1rem}.card-wrapper[_ngcontent-%COMP%]{flex:1 1 calc(100% - 50px);width:calc(100% - 16px);margin-top:1rem}mat-card[_ngcontent-%COMP%]{margin-bottom:1.5rem;box-shadow:0 4px 8px #0000001a;border-radius:12px;transition:all .3s ease-in-out;background-color:#fff;overflow:hidden}mat-card[_ngcontent-%COMP%]:hover{transform:translateY(-5px);box-shadow:0 8px 16px #0003}.card-header[_ngcontent-%COMP%]{background-color:#036c5f;color:#fff;padding:10px 15px}mat-card-title[_ngcontent-%COMP%]{font-size:1.3rem;font-weight:700}mat-card-subtitle[_ngcontent-%COMP%]{font-size:1rem;font-weight:400;color:#80cbc4}mat-card-content[_ngcontent-%COMP%]{padding:15px;color:#333;font-size:1rem;line-height:1.5}mat-card-actions[_ngcontent-%COMP%]{padding:10px;text-align:center;display:flex;justify-content:center;align-items:center}mat-card-actions[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{width:50%;background-color:#fc9772!important;color:#036c5f!important;font-size:1rem;text-transform:uppercase;border-radius:8px;padding:10px;transition:background-color .3s ease,transform .3s ease}mat-card-actions[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover{transform:scale(1.05)}@media screen and (min-width: 128px) and (max-width: 900px){.admin-container[_ngcontent-%COMP%]{padding:1.5rem 10px .8rem}.list[_ngcontent-%COMP%]{margin-bottom:1rem}.heading[_ngcontent-%COMP%]{font-size:2rem;margin-bottom:15px}.card-container[_ngcontent-%COMP%]{height:auto;overflow-y:visible;flex-direction:column;gap:1rem;width:100%;display:flex;justify-content:center;align-items:center}.card-wrapper[_ngcontent-%COMP%]   .card-wrapper[_ngcontent-%COMP%]{flex:1 1 calc(100% - 50px);max-width:calc(100% - 50px);margin-top:1rem}mat-card[_ngcontent-%COMP%]{margin-bottom:1.5rem;box-shadow:0 4px 8px #0000001a;border-radius:12px;transition:all .3s ease-in-out;background-color:#fff;overflow:hidden}.card-header[_ngcontent-%COMP%]{padding:10px}mat-card-title[_ngcontent-%COMP%]{font-size:1.1rem}mat-card-subtitle[_ngcontent-%COMP%]{font-size:.9rem}mat-card-content[_ngcontent-%COMP%]{padding:10px;font-size:.9rem;line-height:1.4}mat-card-actions[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{width:90%;font-size:.9rem;padding:8px}}"]})};export{Z as AssignDoctorComponent};
